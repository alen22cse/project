import { useState } from "react";
import { FileText, Download, Calendar, User, Stethoscope, AlertTriangle } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import type { AnalysisResult } from "@shared/schema";

interface ClinicalReportProps {
  analysisResult?: AnalysisResult | null;
  patientInfo?: {
    name?: string;
    age?: number;
    sex?: string;
    id?: string;
  };
}

export function ClinicalReportGenerator({ analysisResult, patientInfo }: ClinicalReportProps) {
  const [isGenerating, setIsGenerating] = useState(false);

  const generateClinicalNote = () => {
    setIsGenerating(true);
    
    const currentDate = new Date().toLocaleDateString();
    const currentTime = new Date().toLocaleTimeString();
    
    const clinicalNote = `
CLINICAL CONSULTATION REPORT
================================

Date: ${currentDate}
Time: ${currentTime}
Generated by: HealthWhisper AI System

PATIENT INFORMATION
-------------------
Name: ${patientInfo?.name || '[Patient Name]'}
Age: ${patientInfo?.age || '[Age]'}
Sex: ${patientInfo?.sex || '[Sex]'}
Patient ID: ${patientInfo?.id || '[Patient ID]'}

CHIEF COMPLAINT
---------------
${analysisResult?.symptoms?.join(', ') || 'Patient reports symptoms requiring evaluation'}

SYMPTOM ANALYSIS
----------------
Primary Symptoms: ${analysisResult?.symptoms?.join(', ') || 'Not specified'}
Severity: ${analysisResult?.severity || 'Not assessed'}
Duration: ${analysisResult?.duration || 'Not specified'}
Onset: ${analysisResult?.onset || 'Not specified'}
Triggers: ${analysisResult?.triggers || 'None identified'}
Relief Factors: ${analysisResult?.relief || 'None reported'}

RISK ASSESSMENT
---------------
Risk Level: ${analysisResult?.riskLevel?.toUpperCase() || 'NOT ASSESSED'}
${analysisResult?.riskLevel === 'emergency' ? '⚠️  URGENT: Immediate medical attention required' : ''}

SUSPECTED CONDITIONS (AI Analysis)
----------------------------------
${analysisResult?.suspectedConditions?.map((condition, index) => 
  `${index + 1}. ${condition.name}
     Probability: ${condition.probability}
     Clinical Notes: ${condition.description}
  `
).join('\n') || 'No specific conditions identified by AI analysis'}

CLINICAL RECOMMENDATIONS
------------------------
${analysisResult?.recommendedAction || 'Clinical evaluation recommended'}

AI ANALYSIS SUMMARY
-------------------
This report is generated by HealthWhisper AI system based on patient-reported symptoms and medical algorithms. The analysis provides preliminary triage information to assist clinical decision-making.

${analysisResult?.medicalDisclaimer || 'This AI analysis is for clinical reference only and does not replace professional medical judgment. All recommendations should be validated through appropriate clinical examination and diagnostic procedures.'}

NEXT STEPS
----------
□ Clinical examination by attending physician
□ Additional diagnostic tests as indicated
□ Patient monitoring as per clinical protocols
□ Follow-up arrangements as required

---
Report generated by HealthWhisper AI Clinical Support System
For medical professional use only
Date/Time: ${currentDate} ${currentTime}
`;

    // Create and download the clinical note
    const blob = new Blob([clinicalNote], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `clinical-report-${patientInfo?.id || 'patient'}-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    setIsGenerating(false);
  };

  const generateHIPAAClinicalSummary = () => {
    setIsGenerating(true);
    
    const summary = `
HEALTHCARE PROVIDER CLINICAL SUMMARY
====================================

CONFIDENTIAL - HIPAA PROTECTED INFORMATION

Patient Demographics:
- Age: ${patientInfo?.age || '[Age]'} years
- Sex: ${patientInfo?.sex || '[Sex]'}
- Date of Assessment: ${new Date().toLocaleDateString()}

Presenting Symptoms:
${analysisResult?.symptoms?.map(symptom => `• ${symptom}`).join('\n') || '• [Symptoms not specified]'}

Clinical Assessment:
• Symptom Severity: ${analysisResult?.severity || 'Not assessed'}
• Risk Stratification: ${analysisResult?.riskLevel || 'Not assessed'}
• Onset Pattern: ${analysisResult?.onset || 'Not specified'}
• Symptom Duration: ${analysisResult?.duration || 'Not specified'}

Differential Diagnosis Considerations:
${analysisResult?.suspectedConditions?.map((condition, index) => 
  `${index + 1}. ${condition.name} (${condition.probability} likelihood)
     Clinical rationale: ${condition.description}`
).join('\n\n') || 'No specific diagnoses suggested by AI analysis'}

Clinical Action Required:
${analysisResult?.recommendedAction || 'Standard clinical evaluation recommended'}

Provider Notes:
This summary is generated from patient-reported symptoms using AI-assisted triage algorithms. All clinical decisions should be based on direct patient examination, appropriate diagnostic testing, and clinical judgment.

Triage Priority: ${analysisResult?.riskLevel === 'emergency' ? 'IMMEDIATE' : 
                  analysisResult?.riskLevel === 'medium' ? 'URGENT (24-48 hours)' : 
                  'ROUTINE'}

Documentation Date: ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}
System: HealthWhisper Clinical Decision Support

---
CONFIDENTIAL MEDICAL RECORD
This document contains protected health information under HIPAA
`;

    const blob = new Blob([summary], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `hipaa-clinical-summary-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    setIsGenerating(false);
  };

  if (!analysisResult) {
    return (
      <Card className="border-gray-200">
        <CardContent className="p-6 text-center">
          <FileText className="mx-auto w-12 h-12 text-gray-400 mb-4" />
          <p className="text-gray-600">No analysis data available for report generation</p>
          <p className="text-sm text-gray-500 mt-2">Complete a symptom analysis first to generate clinical reports</p>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="border-medical-blue">
      <CardHeader>
        <CardTitle className="flex items-center space-x-2">
          <Stethoscope className="text-medical-blue w-5 h-5" />
          <span>Clinical Report Generator</span>
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* Analysis Summary */}
        <div className="bg-blue-50 rounded-lg p-4">
          <h4 className="font-medium text-gray-900 mb-2">Current Analysis Summary</h4>
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <span className="text-gray-600">Symptoms:</span>
              <p className="font-medium">{analysisResult.symptoms?.join(', ') || 'None specified'}</p>
            </div>
            <div>
              <span className="text-gray-600">Risk Level:</span>
              <Badge className={
                analysisResult.riskLevel === 'emergency' ? 'bg-red-100 text-red-800' :
                analysisResult.riskLevel === 'medium' ? 'bg-orange-100 text-orange-800' :
                'bg-green-100 text-green-800'
              }>
                {analysisResult.riskLevel}
              </Badge>
            </div>
          </div>
        </div>

        {/* Report Generation Options */}
        <div className="space-y-3">
          <h4 className="font-medium text-gray-900">Generate Clinical Documentation</h4>
          
          <div className="grid grid-cols-1 gap-3">
            <Button 
              onClick={generateClinicalNote}
              disabled={isGenerating}
              className="justify-start bg-medical-blue text-white hover:bg-blue-700"
            >
              <FileText className="w-4 h-4 mr-2" />
              {isGenerating ? 'Generating...' : 'Generate Clinical Consultation Report'}
            </Button>
            
            <Button 
              onClick={generateHIPAAClinicalSummary}
              disabled={isGenerating}
              variant="outline"
              className="justify-start"
            >
              <Download className="w-4 h-4 mr-2" />
              {isGenerating ? 'Generating...' : 'Generate HIPAA Clinical Summary'}
            </Button>
          </div>
        </div>

        {/* Report Features */}
        <div className="bg-gray-50 rounded-lg p-4">
          <h5 className="font-medium text-gray-900 mb-2">Report Features</h5>
          <ul className="text-sm text-gray-600 space-y-1">
            <li>• Professional clinical format suitable for medical records</li>
            <li>• HIPAA compliant documentation standards</li>
            <li>• Structured symptom analysis and risk assessment</li>
            <li>• AI-generated differential diagnosis considerations</li>
            <li>• Recommended clinical actions and follow-up</li>
            <li>• Timestamp and system attribution for audit trail</li>
          </ul>
        </div>

        {/* Medical Disclaimer */}
        <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4">
          <div className="flex items-start space-x-3">
            <AlertTriangle className="text-yellow-600 w-5 h-5 mt-0.5" />
            <div>
              <h6 className="font-medium text-yellow-800">Medical Professional Use Only</h6>
              <p className="text-sm text-yellow-700 mt-1">
                These reports are generated for healthcare providers to supplement clinical documentation. 
                All AI analysis should be validated through appropriate clinical examination and diagnostic procedures.
              </p>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}